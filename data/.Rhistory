gpa = gpa,
policy = policy
)
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity") +
facet_wrap(~ policy)
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.4,
position = "identity")
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
gpa_data %>%
group_by(gpa < 7.9) %>%
count(policy)
gpa_data %>%
group_by(gpa < 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9 <- gpa_data %>%
group_by(gpa < 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
by_8.5[4, 3] - by_7.0[3, 3]
by_8.5[4, 3]
by_7.0[3, 3]
by_8.5[4, 3] - by_8.5[3, 3]
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
by_8.5[4, 3] - by_8.5[3, 3]
by_7.9[4, 3] - by_7.9[3, 3]
by_7.0[4, 3] - by_7.0[3, 3]
by_8.5[4, 3] - by_8.5[3, 3]
1577 / 60000
2291 / 60000
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
by_8.5
diff
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / length(gpa_data)
diff_7.0 /
length(gpa_data)
length(gpa_data)
wt(gpa_data)
tally(gpa_data)
diff_7.0 / tally(gpa_data)
diff_7.9 / tally(gpa_data)
?tally
diff_7.0 / nrow(gpa_data)
diff_7.9 / nrow(gpa_data)
nrow(gpa_data)
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
diff_7.9 / nrow(gpa_data) # max percentage difference in policies
a <- rtruncnorm(30000, a = 4, b = 10, mean = 7.5, sd = 1)
b <- rtruncnorm(30000, a = 4, b = 10, mean = 8.0, sd = 1)
gpa <- c(a, b)
policy_a <- rep(0, times = 30000)
policy_b <- rep(1, times = 30000)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
diff_7.9 / nrow(gpa_data) # max percentage difference in policies
a <- rtruncnorm(2000, a = 4, b = 10, mean = 7.8, sd = 1)
b <- rtruncnorm(2000, a = 4, b = 10, mean = 8.0, sd = 1)
gpa <- c(a, b)
policy_a <- rep(0, times = 30000)
policy_b <- rep(1, times = 30000)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
diff_7.9 / nrow(gpa_data) # max percentage difference in policies
a <- rtruncnorm(2000, a = 4, b = 10, mean = 7.8, sd = 1)
b <- rtruncnorm(2000, a = 4, b = 10, mean = 8.0, sd = 1)
gpa <- c(a, b)
policy_a <- rep(0, times = 30000)
policy_a <- rep(0, times = 2000)
policy_b <- rep(1, times = 2000)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / 30000)
by_7.0
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
diff_7.9 / nrow(gpa_data) # max percentage difference in policies
n_obs <- 25000
n_obs <- 25000
a <- rtruncnorm(n_obs, a = 4, b = 10, mean = 7.8, sd = 1)
b <- rtruncnorm(n_obs, a = 4, b = 10, mean = 8.0, sd = 1)
gpa <- c(a, b)
policy_a <- rep(0, times = n_obs)
policy_b <- rep(1, times = n_obs)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
diff_7.9 / nrow(gpa_data) # max percentage difference in policies
policy_a <- rep("policy_a", times = n_obs)
policy_b <- rep("policy_a", times = n_obs)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
policy_b <- rep("policy_ab", times = n_obs)
policy_b <- rep("policy_b", times = n_obs)
policy <- factor(c(policy_a, policy_b))
gpa_data <- tibble(
gpa = gpa,
policy = policy
)
# kuva jakaumista
ggplot(gpa_data, aes(x = gpa, fill = policy)) +
geom_histogram(binwidth = 0.25,
alpha = 0.5,
position = "identity")
# keskiarvorajojen mukaiset erot polivy a ja b ryhmien koossa
by_7.9 <- gpa_data %>%
group_by(gpa > 7.9) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.9
diff_7.9 <- by_7.9[4, 3] - by_7.9[3, 3]
by_7.0 <- gpa_data %>%
group_by(gpa > 7.0) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_7.0
diff_7.0 <- by_7.0[4, 3] - by_7.0[3, 3]
by_8.5 <- gpa_data %>%
group_by(gpa > 8.5) %>%
count(policy) %>%
mutate(percentage = n / nrow(gpa_data))
by_8.5
diff_8.5  <- by_8.5[4, 3] - by_8.5[3, 3]
diff_7.0
diff_7.9
diff_8.5
diff_7.0 / nrow(gpa_data) # max percentage difference in policies
install.packages("pxweb")
library(pxweb)
pxweb::interactive_pxweb(api = 'pxnet2.stat.fi')
?library
install.packages("refset")
?ggpairs
?plot
?plot
install.packages("ggfortify")
autoplot(lm(Points ~ gender + Age + Attitude, data = regr_analysis))
ggfortify::autoplot(lm(Points ~ gender + Age + Attitude, data = regr_analysis))
ggfortify::autoplot(lm(Points ~ Attitude, data = regr_analysis))
ggfortify::autoplot(lm(Points ~ Attitude, data = regr_analysis))
autoplot(lm(Points ~ Attitude, data = regr_analysis))
ggplot2::autoplot(lm(Points ~ Attitude, data = regr_analysis))
regr_analysis <- as_tibble(read.table("learning2014.txt"))
library(ggfortify, ggplot2)
?autoplot
?ggtitle
setwd("~/GitHub/IODS-project")
library(tidyverse)
library(tidyverse)
library(GGally)
library(MASS)
library(corrplot)
boston <- as_tibble(MASS::Boston)
boston_scaled <- as_tibble(scale(boston))
bins <- quantile(boston_scaled$crim)
crim_labels <- c("low", "med_low", "med_high", "high")
boston_scaled <- boston_scaled %>%
mutate(crim =
cut(crim,
breaks = bins,
labels = crim_labels,
include.lowest = TRUE))
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
model_predictors <- dplyr::select(train, -crim)
dim(model_predictors)
dim(lda.fit$scaling)
# fitting the model
lda.fit <- lda(crim ~ ., data = train)
dim(lda.fit$scaling)
# matrix multiplication
matrix_product <- as.matrix(model_predictors) %*% lda.fit$scaling
matrix_product
matrix_product <- as.data.frame(matrix_product)
matrix_product
install.packages("plotly")
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
model_predictors
train
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = train$crim)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = train$crim)
# k-means clustering
km <-kmeans(boston_scaled, centers = 2)
library(tidyverse)
library(GGally)
library(MASS)
library(corrplot)
library(plotly)
# k-means clustering
km <-kmeans(boston_scaled, centers = 2)
boston_scaled
# k-means clustering
km <-kmeans(boston_scaled[2:14], centers = 2)
km <-kmeans(boston_scaled[2:14], centers = 2)
km
clusters <- km$cluster
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
clusters <- km$cluster[-Ind]
clusters <- km$cluster[-ind]
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
clusters <- km$cluster[ind]
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
?plot_ly
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters, alpha = 0.5)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters, alpha = 0.9)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
?plot_ly
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters, colors = "YlOrRd")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = train$crim)
class(clusters)
clusters <- factor(km$cluster[ind])
class(clusters)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
class(train$crim)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', color = clusters)
?plot_ly
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = clusters, colors = "Blues")
?plot_ly
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = clusters, colors = "Set1")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = clusters, colors = "Set1", alpha = 0.2)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = clusters, colors = "Set1")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = train$crim, colors = "Set1")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = train$crim, colors = "Set1")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = train$crim, colors = "Dark2")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', color = clusters, colors = "Dark2")
```{r}
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type = 'scatter3d', mode = 'markers', colors = "Dark2")
setwd("~/GitHub/IODS-project/data")
library(tidyverse)
#####################
# Wrangling BPRS data
bprs <- as_tibble(read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/BPRS.txt", sep  =" ", header = T))
bprs # data set has 40 rows and 11 variables
str(bprs)
summary(bprs) # there are 2 types of treatments provided and 20 subjects who get treatments for 8 weeks
#####################
# Wrangling RATS data
rats <- as_tibble(read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt", sep = '\t', header = T))
rats
str(rats)
summary(rats)
# converting categorical variables in to class factor
rats <- rats %>%
mutate(Group = factor(Group),
ID = factor(ID))
summary(rats)
# converting to long form
rats_l <- rats %>%
gather(key = WD, value = Weight, -ID, -Group) %>%
mutate(Time = as.integer(substr(WD, 3, 4))) %>%
select(Group, ID, Time, Weight) %>%
arrange(Group, ID)
rats_l
str(rats_l)
sumary(rats_l)
summary(rats_l)
summary(bprs_l)
# converting categorical variables in to class factor
bprs <- bprs %>%
mutate(treatment = factor(treatment),
subject = factor(subject))
# converting to long form
bprs_l <- bprs %>%
gather(key = week, value = bprs, -treatment, -subject) %>%
mutate(week = as.integer(substr(week, 5, 5))) %>%
arrange(treatment, subject)
bprs_l
summary(bprs_l)
distinct(bprs_l$subject)
distinct(bprs_l, subject)
bprs_l
summary(rats_l)
rats_l
setwd("~/GitHub/IODS-project/data")
library(tidyverse)
library(corrplot)
schiz <- readRDS("bprs.rds")
setwd("~/GitHub/IODS-project/data")
schiz <- readRDS("bprs.rds")
setwd("~/GitHub/IODS-project/data")
schiz <- readRDS("bprs.rds")
library(tidyverse)
library(corrplot)
schiz <- readRDS("bprs.rds")
schiz <- readRDS("bprs.rds")
readRDS("bprs.rds")
